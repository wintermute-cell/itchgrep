version: '3'

tasks:
  local-dataservice:
    cmds:
      - task: prepare-fake-gcs-volume
      - defer: docker network rm itchgrep-network
      - docker network create itchgrep-network

      - defer: docker stop fake-gcs-server && docker rm fake-gcs-server
      - docker run -d --name fake-gcs-server --network itchgrep-network -p 4443:4443 -v ${PWD}/local_data:/storage fsouza/fake-gcs-server -scheme http -data /storage

      - docker build . -t itchgrep-dataservice -f "Dockerfile.dataservice"
      - defer: docker stop itchgrep-dataservice && docker rm itchgrep-dataservice
      - docker run --name itchgrep-dataservice --network itchgrep-network -e RUN_LOCAL=true itchgrep-dataservice

  local-webserver:
    cmds:
      - task: prepare-fake-gcs-volume
      - defer: docker network rm itchgrep-network
      - docker network create itchgrep-network

      - defer: docker stop fake-gcs-server && docker rm fake-gcs-server
      - docker run -d --name fake-gcs-server --network itchgrep-network -p 4443:4443 -v ${PWD}/local_data:/storage fsouza/fake-gcs-server -scheme http -data /storage

      - docker build . -t itchgrep-webserver -f "Dockerfile.webserver"
      - defer: docker stop itchgrep-webserver && docker rm itchgrep-webserver
      - docker run --name itchgrep-webserver --network itchgrep-network -p 8080:8080 -e PAGE_SIZE=36 -e RUN_LOCAL=true itchgrep-webserver

  templ:
    cmds:
      - templ generate

  test:
    cmds:
      - task: test-storage

  test-storage:
    silent: false
    env:
      RUN_TEST: true
      RUN_LOCAL: true
    cmds:
      - task: prepare-temp-fake-gcs-volume
      - defer: { task: clean-temp-fake-gcs-volume }

      - defer: { task: clean-fake-gcs-server }
      - cmd: docker run -d --name fake-gcs-server -p 4443:4443 -v ${PWD}/.tmp_local_data:/data fsouza/fake-gcs-server -scheme http -data /data -backend memory > /dev/null
        silent: true

      - go test internal/storage/*


  # --------------------------------
  # INTERNAL TASKS, NOT FOR RUNNING
  # --------------------------------

  clean-fake-gcs-server:
    internal: true
    silent: true
    cmds:
      - docker stop fake-gcs-server > /dev/null && docker rm fake-gcs-server > /dev/null


  prepare-fake-gcs-volume:
    internal: true
    silent: true
    cmds:
      - mkdir -p "$(pwd)/local_data/itchgrep-data/"
      # we have to do the if check because the fake gcs container chowns the
      # files to root (does not appear to reacht to --user flag)
      - if [ ! -f "$(pwd)/local_data/itchgrep-data/.COME_ON_DOCKER" ];
        then touch "$(pwd)/local_data/itchgrep-data/.COME_ON_DOCKER";
        fi
      # the `touch` is required because otherwise the directory won't be
      # created in the container, causing interaction with the bucket to 404

  prepare-temp-fake-gcs-volume:
    internal: true
    silent: true
    cmds:
      - rm -rf -p "$(pwd)/.tmp_local_data/
      - mkdir -p "$(pwd)/.tmp_local_data/itchgrep-data/"
      # we have to do the if check because the fake gcs container chowns the
      # files to root (does not appear to reacht to --user flag)
      - if [ ! -f "$(pwd)/local_data/.tmp_local_data/.COME_ON_DOCKER" ];
        then touch "$(pwd)/local_data/.tmp_local_data/.COME_ON_DOCKER";
        fi
      # the `touch` is required because otherwise the directory won't be
      # created in the container, causing interaction with the bucket to 404

  clean-temp-fake-gcs-volume:
    internal: true
    silent: true
    cmds:
      - rm -rf "$(pwd)/.tmp_local_data/"
